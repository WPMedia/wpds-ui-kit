const mapping = [
  {
    token: "colors",
    properties: [
      "background",
      "backgroundColor",
      "backgroundImage",
      "border",
      "borderBlock",
      "borderBlockEnd",
      "borderBlockStart",
      "borderBottom",
      "borderBottomColor",
      "borderColor",
      "borderInline",
      "borderInlineEnd",
      "borderInlineStart",
      "borderLeft",
      "borderLeftColor",
      "borderRight",
      "borderRightColor",
      "borderTop",
      "borderTopColor",
      "caretColor",
      "color",
      "columnRuleColor",
      "fill",
      "outlineColor",
      "stroke",
      "textDecorationColor",
    ],
  },
  {
    token: "fonts",
    properties: ["fontFamily"],
  },
  {
    token: "fontSizes",
    properties: ["fontSize"],
  },
  {
    token: "fontWeights",
    properties: ["fontWeight"],
  },
  {
    token: "lineHeights",
    properties: ["lineHeight"],
  },
  {
    token: "letterSpacings",
    properties: ["letterSpacing"],
  },
  {
    token: "radii",
    properties: [
      "borderRadius",
      "borderTopLeftRadius",
      "borderTopRightRadius",
      "borderBottomRightRadius",
      "borderBottomLeftRadius",
    ],
  },
  {
    token: "sizes",
    properties: [
      "blockSize",
      "minBlockSize",
      "maxBlockSize",
      "inlineSize",
      "minInlineSize",
      "maxInlineSize",
      "width",
      "minWidth",
      "maxWidth",
      "height",
      "minHeight",
      "maxHeight",
      "flexBasis",
      "gridTemplateColumns",
      "gridTemplateRows",
    ],
  },
  {
    token: "space",
    properties: [
      "gap",
      "gridGap",
      "columnGap",
      "gridColumnGap",
      "rowGap",
      "gridRowGap",
      "inset",
      "insetBlock",
      "insetBlockEnd",
      "insetBlockStart",
      "insetInline",
      "insetInlineEnd",
      "insetInlineStart",
      "margin",
      "marginTop",
      "marginRight",
      "marginBottom",
      "marginLeft",
      "marginBlock",
      "marginBlockEnd",
      "marginBlockStart",
      "marginInline",
      "marginInlineEnd",
      "marginInlineStart",
      "padding",
      "paddingTop",
      "paddingRight",
      "paddingBottom",
      "paddingLeft",
      "paddingBlock",
      "paddingBlockEnd",
      "paddingBlockStart",
      "paddingInline",
      "paddingInlineEnd",
      "paddingInlineStart",
      "top",
      "right",
      "bottom",
      "left",
      "scrollMargin",
      "scrollMarginTop",
      "scrollMarginRight",
      "scrollMarginBottom",
      "scrollMarginLeft",
      "scrollMarginX",
      "scrollMarginY",
      "scrollMarginBlock",
      "scrollMarginBlockEnd",
      "scrollMarginBlockStart",
      "scrollMarginInline",
      "scrollMarginInlineEnd",
      "scrollMarginInlineStart",
      "scrollPadding",
      "scrollPaddingTop",
      "scrollPaddingRight",
      "scrollPaddingBottom",
      "scrollPaddingLeft",
      "scrollPaddingX",
      "scrollPaddingY",
      "scrollPaddingBlock",
      "scrollPaddingBlockEnd",
      "scrollPaddingBlockStart",
      "scrollPaddingInline",
      "scrollPaddingInlineEnd",
      "scrollPaddingInlineStart",
    ],
  },
  {
    token: "zIndices",
    properties: ["zIndex"],
  },
  {
    token: "shadows",
    properties: ["boxShadow", "textShadow"],
  },
  {
    token: "transitions",
    properties: ["transition"],
  },
  {
    token: "borderWidths",
    properties: [
      "borderWidth",
      "borderTopWidth",
      "borderRightWidth",
      "borderBottomWidth",
      "borderLeftWidth",
    ],
  },
  {
    token: "borderStyles",
    properties: [
      "borderStyle",
      "borderTopStyle",
      "borderRightStyle",
      "borderBottomStyle",
      "borderLeftStyle",
    ],
  },
];

export const tokenTypeFromProperty = (prop) => {
  const match = mapping.find((obj) => obj.properties.includes(prop));
  if (match) {
    return match.token;
  } else {
    return;
  }
};
